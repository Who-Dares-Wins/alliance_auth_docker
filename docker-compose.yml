version: '3'
services:
  traefik:
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.frontend.rule=Host:traefik.${DOMAIN}"
      - "traefik.local.frontend.entryPoints=http"
      - "traefik.port=8888"
      - "traefik.backend=traefik"
      - "traefik.docker.network=web"
    image: library/traefik:1.7.16
    ports:
      - 80:80
      - 443:443
      - 8888:8888
      - 4545:8080
    expose:
      - 8888
    network_mode: host
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_API_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/traefik/traefik.toml:/traefik.toml
      - ./conf/traefik/servers.toml:/servers.toml
      - ./conf/opt/docker/traefik/acme.json:/acme.json
    container_name: traefik
    restart: unless-stopped
    command: --docker --insecureSkipVerify=true


  nginx:
    image: nginx:1.15.5
    container_name: aa-nginx
    labels:
      - "traefik.frontend.rule=Host:${SUB_DOMAIN}.${DOMAIN}"
      - "traefik.docker.network=millerdev_srv"
      - "traefik.port=80"
    volumes:
      - ./conf/local.conf:/etc/nginx/conf.d/default.conf
      - static-volume:/var/www/myauth/static
    depends_on:
      - allianceauth
    networks:
      - aa-network

  redis:
    image: redis:3
    container_name: aa-redis
    command: redis-server
    restart: always
    volumes:
      - "redis-data:/data"
    networks:
      - aa-network
    expose:
      - "6379"
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"

  allianceauth:
    build: .
    container_name: aa-auth
    restart: always
    #command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic && /usr/bin/supervisord"
    ports:
      - 5555:5555
    environment:
      DB_HOST: "${DB_HOST}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./conf/local.py:/home/allianceserver/myauth/myauth/settings/local.py
      - static-volume:/var/www/myauth/static
    depends_on:
     - redis
    networks:
      - aa-network


networks:
  aa-network:

volumes:
    redis-data:
    static-volume:
